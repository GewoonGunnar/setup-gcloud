# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Set up gcloud Cloud SDK environment'
author: 'Google LLC'
description: |-
  Downloads, installs, and configures a Google Cloud SDK environment.
  Adds the `gcloud` CLI command to the $PATH.

inputs:
  version:
    description: |-
      A string representing the version or version constraint of the Cloud SDK
      (`gcloud`) to install (e.g. `"290.0.1"` or `">= 197.0.1"`). The default
      value is `"latest"`, which will always download and install the latest
      available Cloud SDK version.

          - uses: 'google-github-actions/setup-gcloud@v3'
            with:
              version: '>= 416.0.0'

      If there is no installed `gcloud` version that matches the given
      constraint, this GitHub Action will download and install the latest
      available version that still matches the constraint.

      Authenticating via Workload Identity Federation requires version
      [363.0.0](https://cloud.google.com/sdk/docs/release-notes#36300_2021-11-02)
      or newer. If you need support for Workload Identity Federation, specify
      your version constraint as such:

          - uses: 'google-github-actions/setup-gcloud@v3'
            with:
              version: '>= 363.0.0'

      You are responsible for ensuring the `gcloud` version matches the features
      and components required.
    default: 'latest'
    required: false

  project_id:
    description: |-
      ID of the Google Cloud project. If provided, this will configure gcloud to
      use this project ID by default for commands. Individual commands can still
      override the project using the `--project` flag which takes precedence. If
      unspecified, the action attempts to find the "best" project ID by looking
      at other inputs and environment variables.
    required: false

  install_components:
    description: |-
      List of additional [gcloud
      components](https://cloud.google.com/sdk/docs/components) to install,
      specified as a comma-separated list of strings:

          install_components: 'alpha,cloud-datastore-emulator'
    required: false

  skip_install:
    description: |-
      Skip installation of gcloud and use the [system-supplied
      version](https://github.com/actions/runner-images) instead. If specified,
      the `version` input is ignored.

      ⚠️ You will not be able to install additional gcloud components, because the
      system installation is locked.
    default: false
    required: false

  cache:
    description: |-
      Transfer the downloaded artifacts into the runner's tool cache. On
      GitHub-managed runners, this have very little impact since runneres are
      ephemeral. On self-hosted runners, this could improve future runs by
      skipping future gcloud installations.
    default: false
    required: false

outputs:
  version:
    description: |-
      Version of gcloud that was installed.

branding:
  icon: 'terminal'
  color: 'blue'

runs:
  using: 'node24'
  main: 'dist/index.js'

            - name: Setup Node.js environment
  uses: actions/setup-node@v5.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Set to false to disable automatic caching based on the package manager field in package.json. By default, caching is enabled if the package manager field is present.
    package-manager-cache: # optional, default is true
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Used to specify an alternative mirror to downlooad Node.js binaries from
    mirror: # optional
    # The token used as Authorization header when fetching from the mirror
    mirror-token: # optional
          
